# Generated by Django 3.0.4 on 2020-04-13 17:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ApiInfo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, verbose_name='接口名称')),
                ('requestType', models.CharField(choices=[('GET', 'GET'), ('POST', 'POST')], max_length=50, verbose_name='请求方式')),
                ('apiAddress', models.CharField(max_length=1024, verbose_name='接口地址')),
                ('head', models.TextField(blank=True, null=True, verbose_name='头信息')),
                ('data', models.TextField(blank=True, null=True, verbose_name='内容')),
                ('description', models.TextField(blank=True, max_length=1024, null=True, verbose_name='描述')),
                ('createtime', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('creater', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='createapi', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
            ],
            options={
                'verbose_name': '接口',
                'verbose_name_plural': '接口管理',
            },
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('casename', models.CharField(max_length=50, verbose_name='用例名称')),
                ('examineType', models.CharField(choices=[('assertEqual_func', 'assertEqual'), ('assertNotEqual_func', 'assertNotEqual'), ('assertIn_func', 'assertIn'), ('assertNotIn_func', 'assertNotIn'), ('assertRegexpMatches_func', 'assertRegexpMatches')], default='no_check', max_length=50, verbose_name='校验方式')),
                ('expecthttpCode', models.CharField(blank=True, max_length=50, null=True, verbose_name='HTTP状态')),
                ('expectdata', models.TextField(blank=True, null=True, verbose_name='返回内容')),
                ('createtime', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('creater', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='createcase', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('relateapi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_case', to='firstproj.ApiInfo', verbose_name='关联接口')),
            ],
            options={
                'verbose_name': '用例',
                'verbose_name_plural': '测试用例管理',
            },
        ),
        migrations.CreateModel(
            name='TestSuite',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('suitename', models.CharField(max_length=50, verbose_name='测试套件名')),
                ('description', models.TextField(blank=True, max_length=1024, null=True, verbose_name='描述')),
                ('createtime', models.DateField(auto_now_add=True, verbose_name='创建时间')),
                ('runcount', models.IntegerField(default=0, verbose_name='运行次数')),
                ('runtime', models.DateTimeField(auto_now=True, null=True, verbose_name='最后运行时间')),
                ('creater', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='createsuite', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('suitecase', models.ManyToManyField(blank=True, null=True, related_name='case_suite', to='firstproj.TestCase', verbose_name='关联用例')),
            ],
            options={
                'verbose_name': '测试套件',
                'verbose_name_plural': '测试套件管理',
            },
        ),
        migrations.CreateModel(
            name='TestReport',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('result', models.BooleanField(choices=[(True, '完成'), (False, '失败')], verbose_name='测试进度')),
                ('reportname', models.CharField(max_length=1024, verbose_name='测试报告名')),
                ('succees_count', models.IntegerField(null=True, verbose_name='成功用例数量')),
                ('fail_count', models.IntegerField(null=True, verbose_name='失败用例数量')),
                ('error_count', models.IntegerField(null=True, verbose_name='错误用例数量')),
                ('skip_count', models.IntegerField(null=True, verbose_name='跳过用例数量')),
                ('report_data', models.FileField(upload_to='', verbose_name='测试报告文件')),
                ('run_time', models.DateTimeField(auto_now_add=True, verbose_name='测试时间')),
                ('error_case', models.ManyToManyField(blank=True, null=True, related_name='error_case_report', to='firstproj.TestCase', verbose_name='错误用例')),
                ('fail_case', models.ManyToManyField(blank=True, null=True, related_name='fail_case_report', to='firstproj.TestCase', verbose_name='失败用例')),
                ('succees_case', models.ManyToManyField(blank=True, null=True, related_name='succees_case_report', to='firstproj.TestCase', verbose_name='成功用例')),
                ('testsuite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='testsuite_result', to='firstproj.TestSuite', verbose_name='测试套件')),
            ],
            options={
                'verbose_name': '测试报告',
                'verbose_name_plural': '测试报告管理',
            },
        ),
    ]
